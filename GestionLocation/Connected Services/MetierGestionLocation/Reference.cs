//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GestionLocation.MetierGestionLocation {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/MetierGestionLocation")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Appartement", Namespace="http://schemas.datacontract.org/2004/07/MetierGestionLocation.Model")]
    [System.SerializableAttribute()]
    public partial class Appartement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdresseAppartementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<float> CapaciteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GestionLocation.MetierGestionLocation.ContratLocation[] ContratLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisponibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdAppartementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdPropriataireField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdTypeAppartementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NombrePieceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GestionLocation.MetierGestionLocation.Proprietaire ProprietaireField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<float> SurfaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GestionLocation.MetierGestionLocation.TypeAppartement TypeAppartementField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdresseAppartement {
            get {
                return this.AdresseAppartementField;
            }
            set {
                if ((object.ReferenceEquals(this.AdresseAppartementField, value) != true)) {
                    this.AdresseAppartementField = value;
                    this.RaisePropertyChanged("AdresseAppartement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> Capacite {
            get {
                return this.CapaciteField;
            }
            set {
                if ((this.CapaciteField.Equals(value) != true)) {
                    this.CapaciteField = value;
                    this.RaisePropertyChanged("Capacite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GestionLocation.MetierGestionLocation.ContratLocation[] ContratLocation {
            get {
                return this.ContratLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.ContratLocationField, value) != true)) {
                    this.ContratLocationField = value;
                    this.RaisePropertyChanged("ContratLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Disponible {
            get {
                return this.DisponibleField;
            }
            set {
                if ((this.DisponibleField.Equals(value) != true)) {
                    this.DisponibleField = value;
                    this.RaisePropertyChanged("Disponible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdAppartement {
            get {
                return this.IdAppartementField;
            }
            set {
                if ((this.IdAppartementField.Equals(value) != true)) {
                    this.IdAppartementField = value;
                    this.RaisePropertyChanged("IdAppartement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdPropriataire {
            get {
                return this.IdPropriataireField;
            }
            set {
                if ((this.IdPropriataireField.Equals(value) != true)) {
                    this.IdPropriataireField = value;
                    this.RaisePropertyChanged("IdPropriataire");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdTypeAppartement {
            get {
                return this.IdTypeAppartementField;
            }
            set {
                if ((this.IdTypeAppartementField.Equals(value) != true)) {
                    this.IdTypeAppartementField = value;
                    this.RaisePropertyChanged("IdTypeAppartement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NombrePiece {
            get {
                return this.NombrePieceField;
            }
            set {
                if ((this.NombrePieceField.Equals(value) != true)) {
                    this.NombrePieceField = value;
                    this.RaisePropertyChanged("NombrePiece");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GestionLocation.MetierGestionLocation.Proprietaire Proprietaire {
            get {
                return this.ProprietaireField;
            }
            set {
                if ((object.ReferenceEquals(this.ProprietaireField, value) != true)) {
                    this.ProprietaireField = value;
                    this.RaisePropertyChanged("Proprietaire");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> Surface {
            get {
                return this.SurfaceField;
            }
            set {
                if ((this.SurfaceField.Equals(value) != true)) {
                    this.SurfaceField = value;
                    this.RaisePropertyChanged("Surface");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GestionLocation.MetierGestionLocation.TypeAppartement TypeAppartement {
            get {
                return this.TypeAppartementField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeAppartementField, value) != true)) {
                    this.TypeAppartementField = value;
                    this.RaisePropertyChanged("TypeAppartement");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Proprietaire", Namespace="http://schemas.datacontract.org/2004/07/MetierGestionLocation.Model")]
    [System.SerializableAttribute()]
    public partial class Proprietaire : GestionLocation.MetierGestionLocation.Personne {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GestionLocation.MetierGestionLocation.Appartement[] AppartementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NineaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RccmField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GestionLocation.MetierGestionLocation.Appartement[] Appartements {
            get {
                return this.AppartementsField;
            }
            set {
                if ((object.ReferenceEquals(this.AppartementsField, value) != true)) {
                    this.AppartementsField = value;
                    this.RaisePropertyChanged("Appartements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ninea {
            get {
                return this.NineaField;
            }
            set {
                if ((object.ReferenceEquals(this.NineaField, value) != true)) {
                    this.NineaField = value;
                    this.RaisePropertyChanged("Ninea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rccm {
            get {
                return this.RccmField;
            }
            set {
                if ((object.ReferenceEquals(this.RccmField, value) != true)) {
                    this.RccmField = value;
                    this.RaisePropertyChanged("Rccm");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TypeAppartement", Namespace="http://schemas.datacontract.org/2004/07/MetierGestionLocation.Model")]
    [System.SerializableAttribute()]
    public partial class TypeAppartement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GestionLocation.MetierGestionLocation.Appartement[] AppartementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdTypeAppartementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LibelleTypeAppartementField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GestionLocation.MetierGestionLocation.Appartement[] Appartements {
            get {
                return this.AppartementsField;
            }
            set {
                if ((object.ReferenceEquals(this.AppartementsField, value) != true)) {
                    this.AppartementsField = value;
                    this.RaisePropertyChanged("Appartements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdTypeAppartement {
            get {
                return this.IdTypeAppartementField;
            }
            set {
                if ((this.IdTypeAppartementField.Equals(value) != true)) {
                    this.IdTypeAppartementField = value;
                    this.RaisePropertyChanged("IdTypeAppartement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LibelleTypeAppartement {
            get {
                return this.LibelleTypeAppartementField;
            }
            set {
                if ((object.ReferenceEquals(this.LibelleTypeAppartementField, value) != true)) {
                    this.LibelleTypeAppartementField = value;
                    this.RaisePropertyChanged("LibelleTypeAppartement");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContratLocation", Namespace="http://schemas.datacontract.org/2004/07/MetierGestionLocation.Model")]
    [System.SerializableAttribute()]
    public partial class ContratLocation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GestionLocation.MetierGestionLocation.Appartement AppartementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateCreationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateDebutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateFinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdAppartementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdContratField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdLocataireField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdPaiementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GestionLocation.MetierGestionLocation.Locataire LocataireField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<float> MontantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumeroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GestionLocation.MetierGestionLocation.Paiement PaiementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GestionLocation.MetierGestionLocation.Paiement[] PaiementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatutField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GestionLocation.MetierGestionLocation.Appartement Appartement {
            get {
                return this.AppartementField;
            }
            set {
                if ((object.ReferenceEquals(this.AppartementField, value) != true)) {
                    this.AppartementField = value;
                    this.RaisePropertyChanged("Appartement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateCreation {
            get {
                return this.DateCreationField;
            }
            set {
                if ((this.DateCreationField.Equals(value) != true)) {
                    this.DateCreationField = value;
                    this.RaisePropertyChanged("DateCreation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateDebut {
            get {
                return this.DateDebutField;
            }
            set {
                if ((this.DateDebutField.Equals(value) != true)) {
                    this.DateDebutField = value;
                    this.RaisePropertyChanged("DateDebut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateFin {
            get {
                return this.DateFinField;
            }
            set {
                if ((this.DateFinField.Equals(value) != true)) {
                    this.DateFinField = value;
                    this.RaisePropertyChanged("DateFin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdAppartement {
            get {
                return this.IdAppartementField;
            }
            set {
                if ((this.IdAppartementField.Equals(value) != true)) {
                    this.IdAppartementField = value;
                    this.RaisePropertyChanged("IdAppartement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdContrat {
            get {
                return this.IdContratField;
            }
            set {
                if ((this.IdContratField.Equals(value) != true)) {
                    this.IdContratField = value;
                    this.RaisePropertyChanged("IdContrat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdLocataire {
            get {
                return this.IdLocataireField;
            }
            set {
                if ((this.IdLocataireField.Equals(value) != true)) {
                    this.IdLocataireField = value;
                    this.RaisePropertyChanged("IdLocataire");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdPaiement {
            get {
                return this.IdPaiementField;
            }
            set {
                if ((this.IdPaiementField.Equals(value) != true)) {
                    this.IdPaiementField = value;
                    this.RaisePropertyChanged("IdPaiement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GestionLocation.MetierGestionLocation.Locataire Locataire {
            get {
                return this.LocataireField;
            }
            set {
                if ((object.ReferenceEquals(this.LocataireField, value) != true)) {
                    this.LocataireField = value;
                    this.RaisePropertyChanged("Locataire");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> Montant {
            get {
                return this.MontantField;
            }
            set {
                if ((this.MontantField.Equals(value) != true)) {
                    this.MontantField = value;
                    this.RaisePropertyChanged("Montant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Numero {
            get {
                return this.NumeroField;
            }
            set {
                if ((object.ReferenceEquals(this.NumeroField, value) != true)) {
                    this.NumeroField = value;
                    this.RaisePropertyChanged("Numero");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GestionLocation.MetierGestionLocation.Paiement Paiement {
            get {
                return this.PaiementField;
            }
            set {
                if ((object.ReferenceEquals(this.PaiementField, value) != true)) {
                    this.PaiementField = value;
                    this.RaisePropertyChanged("Paiement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GestionLocation.MetierGestionLocation.Paiement[] Paiements {
            get {
                return this.PaiementsField;
            }
            set {
                if ((object.ReferenceEquals(this.PaiementsField, value) != true)) {
                    this.PaiementsField = value;
                    this.RaisePropertyChanged("Paiements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Statut {
            get {
                return this.StatutField;
            }
            set {
                if ((object.ReferenceEquals(this.StatutField, value) != true)) {
                    this.StatutField = value;
                    this.RaisePropertyChanged("Statut");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Locataire", Namespace="http://schemas.datacontract.org/2004/07/MetierGestionLocation.Model")]
    [System.SerializableAttribute()]
    public partial class Locataire : GestionLocation.MetierGestionLocation.Personne {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GestionLocation.MetierGestionLocation.ContratLocation[] ContratLocationsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GestionLocation.MetierGestionLocation.ContratLocation[] ContratLocations {
            get {
                return this.ContratLocationsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContratLocationsField, value) != true)) {
                    this.ContratLocationsField = value;
                    this.RaisePropertyChanged("ContratLocations");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Paiement", Namespace="http://schemas.datacontract.org/2004/07/MetierGestionLocation.Model")]
    [System.SerializableAttribute()]
    public partial class Paiement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GestionLocation.MetierGestionLocation.ContratLocation ContratLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DatePaimentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdContratField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdModePaiementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdPaiementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GestionLocation.MetierGestionLocation.ModePaiement ModePaiementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<float> MontantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumeroFactureField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GestionLocation.MetierGestionLocation.ContratLocation ContratLocation {
            get {
                return this.ContratLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.ContratLocationField, value) != true)) {
                    this.ContratLocationField = value;
                    this.RaisePropertyChanged("ContratLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DatePaiment {
            get {
                return this.DatePaimentField;
            }
            set {
                if ((this.DatePaimentField.Equals(value) != true)) {
                    this.DatePaimentField = value;
                    this.RaisePropertyChanged("DatePaiment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdContrat {
            get {
                return this.IdContratField;
            }
            set {
                if ((this.IdContratField.Equals(value) != true)) {
                    this.IdContratField = value;
                    this.RaisePropertyChanged("IdContrat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdModePaiement {
            get {
                return this.IdModePaiementField;
            }
            set {
                if ((this.IdModePaiementField.Equals(value) != true)) {
                    this.IdModePaiementField = value;
                    this.RaisePropertyChanged("IdModePaiement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdPaiement {
            get {
                return this.IdPaiementField;
            }
            set {
                if ((this.IdPaiementField.Equals(value) != true)) {
                    this.IdPaiementField = value;
                    this.RaisePropertyChanged("IdPaiement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GestionLocation.MetierGestionLocation.ModePaiement ModePaiement {
            get {
                return this.ModePaiementField;
            }
            set {
                if ((object.ReferenceEquals(this.ModePaiementField, value) != true)) {
                    this.ModePaiementField = value;
                    this.RaisePropertyChanged("ModePaiement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> Montant {
            get {
                return this.MontantField;
            }
            set {
                if ((this.MontantField.Equals(value) != true)) {
                    this.MontantField = value;
                    this.RaisePropertyChanged("Montant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumeroFacture {
            get {
                return this.NumeroFactureField;
            }
            set {
                if ((object.ReferenceEquals(this.NumeroFactureField, value) != true)) {
                    this.NumeroFactureField = value;
                    this.RaisePropertyChanged("NumeroFacture");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Personne", Namespace="http://schemas.datacontract.org/2004/07/MetierGestionLocation.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GestionLocation.MetierGestionLocation.Proprietaire))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GestionLocation.MetierGestionLocation.Utilisateur))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GestionLocation.MetierGestionLocation.Locataire))]
    public partial class Personne : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdPersonneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomPrenomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNI {
            get {
                return this.CNIField;
            }
            set {
                if ((object.ReferenceEquals(this.CNIField, value) != true)) {
                    this.CNIField = value;
                    this.RaisePropertyChanged("CNI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdPersonne {
            get {
                return this.IdPersonneField;
            }
            set {
                if ((this.IdPersonneField.Equals(value) != true)) {
                    this.IdPersonneField = value;
                    this.RaisePropertyChanged("IdPersonne");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NomPrenom {
            get {
                return this.NomPrenomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomPrenomField, value) != true)) {
                    this.NomPrenomField = value;
                    this.RaisePropertyChanged("NomPrenom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Utilisateur", Namespace="http://schemas.datacontract.org/2004/07/MetierGestionLocation.Model")]
    [System.SerializableAttribute()]
    public partial class Utilisateur : GestionLocation.MetierGestionLocation.Personne {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdentifiantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MotDePasseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatutField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identifiant {
            get {
                return this.IdentifiantField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentifiantField, value) != true)) {
                    this.IdentifiantField = value;
                    this.RaisePropertyChanged("Identifiant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MotDePasse {
            get {
                return this.MotDePasseField;
            }
            set {
                if ((object.ReferenceEquals(this.MotDePasseField, value) != true)) {
                    this.MotDePasseField = value;
                    this.RaisePropertyChanged("MotDePasse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Statut {
            get {
                return this.StatutField;
            }
            set {
                if ((object.ReferenceEquals(this.StatutField, value) != true)) {
                    this.StatutField = value;
                    this.RaisePropertyChanged("Statut");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModePaiement", Namespace="http://schemas.datacontract.org/2004/07/MetierGestionLocation.Model")]
    [System.SerializableAttribute()]
    public partial class ModePaiement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdModePaiementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LibelleModePaiementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GestionLocation.MetierGestionLocation.Paiement[] PaiementsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdModePaiement {
            get {
                return this.IdModePaiementField;
            }
            set {
                if ((this.IdModePaiementField.Equals(value) != true)) {
                    this.IdModePaiementField = value;
                    this.RaisePropertyChanged("IdModePaiement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LibelleModePaiement {
            get {
                return this.LibelleModePaiementField;
            }
            set {
                if ((object.ReferenceEquals(this.LibelleModePaiementField, value) != true)) {
                    this.LibelleModePaiementField = value;
                    this.RaisePropertyChanged("LibelleModePaiement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GestionLocation.MetierGestionLocation.Paiement[] Paiements {
            get {
                return this.PaiementsField;
            }
            set {
                if ((object.ReferenceEquals(this.PaiementsField, value) != true)) {
                    this.PaiementsField = value;
                    this.RaisePropertyChanged("Paiements");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MetierGestionLocation.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        GestionLocation.MetierGestionLocation.CompositeType GetDataUsingDataContract(GestionLocation.MetierGestionLocation.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.CompositeType> GetDataUsingDataContractAsync(GestionLocation.MetierGestionLocation.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddAppartement", ReplyAction="http://tempuri.org/IService1/AddAppartementResponse")]
        bool AddAppartement(GestionLocation.MetierGestionLocation.Appartement appartement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddAppartement", ReplyAction="http://tempuri.org/IService1/AddAppartementResponse")]
        System.Threading.Tasks.Task<bool> AddAppartementAsync(GestionLocation.MetierGestionLocation.Appartement appartement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListeAppartement", ReplyAction="http://tempuri.org/IService1/GetListeAppartementResponse")]
        GestionLocation.MetierGestionLocation.Appartement[] GetListeAppartement(string adresse, System.Nullable<float> capacite, System.Nullable<bool> disponible);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListeAppartement", ReplyAction="http://tempuri.org/IService1/GetListeAppartementResponse")]
        System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.Appartement[]> GetListeAppartementAsync(string adresse, System.Nullable<float> capacite, System.Nullable<bool> disponible);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAppartementById", ReplyAction="http://tempuri.org/IService1/GetAppartementByIdResponse")]
        GestionLocation.MetierGestionLocation.Appartement GetAppartementById(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAppartementById", ReplyAction="http://tempuri.org/IService1/GetAppartementByIdResponse")]
        System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.Appartement> GetAppartementByIdAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteAppartement", ReplyAction="http://tempuri.org/IService1/DeleteAppartementResponse")]
        bool DeleteAppartement(GestionLocation.MetierGestionLocation.Appartement appartement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteAppartement", ReplyAction="http://tempuri.org/IService1/DeleteAppartementResponse")]
        System.Threading.Tasks.Task<bool> DeleteAppartementAsync(GestionLocation.MetierGestionLocation.Appartement appartement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateAppartement", ReplyAction="http://tempuri.org/IService1/UpdateAppartementResponse")]
        bool UpdateAppartement(GestionLocation.MetierGestionLocation.Appartement appartement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateAppartement", ReplyAction="http://tempuri.org/IService1/UpdateAppartementResponse")]
        System.Threading.Tasks.Task<bool> UpdateAppartementAsync(GestionLocation.MetierGestionLocation.Appartement appartement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddLocataire", ReplyAction="http://tempuri.org/IService1/AddLocataireResponse")]
        bool AddLocataire(GestionLocation.MetierGestionLocation.Locataire locataire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddLocataire", ReplyAction="http://tempuri.org/IService1/AddLocataireResponse")]
        System.Threading.Tasks.Task<bool> AddLocataireAsync(GestionLocation.MetierGestionLocation.Locataire locataire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateLocataire", ReplyAction="http://tempuri.org/IService1/UpdateLocataireResponse")]
        bool UpdateLocataire(GestionLocation.MetierGestionLocation.Locataire locataire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateLocataire", ReplyAction="http://tempuri.org/IService1/UpdateLocataireResponse")]
        System.Threading.Tasks.Task<bool> UpdateLocataireAsync(GestionLocation.MetierGestionLocation.Locataire locataire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteLocataire", ReplyAction="http://tempuri.org/IService1/DeleteLocataireResponse")]
        bool DeleteLocataire(GestionLocation.MetierGestionLocation.Locataire locataire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteLocataire", ReplyAction="http://tempuri.org/IService1/DeleteLocataireResponse")]
        System.Threading.Tasks.Task<bool> DeleteLocataireAsync(GestionLocation.MetierGestionLocation.Locataire locataire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLocataireById", ReplyAction="http://tempuri.org/IService1/GetLocataireByIdResponse")]
        GestionLocation.MetierGestionLocation.Locataire GetLocataireById(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLocataireById", ReplyAction="http://tempuri.org/IService1/GetLocataireByIdResponse")]
        System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.Locataire> GetLocataireByIdAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListeLocataires", ReplyAction="http://tempuri.org/IService1/GetListeLocatairesResponse")]
        GestionLocation.MetierGestionLocation.Locataire[] GetListeLocataires();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListeLocataires", ReplyAction="http://tempuri.org/IService1/GetListeLocatairesResponse")]
        System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.Locataire[]> GetListeLocatairesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddProprietaire", ReplyAction="http://tempuri.org/IService1/AddProprietaireResponse")]
        bool AddProprietaire(GestionLocation.MetierGestionLocation.Proprietaire proprietaire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddProprietaire", ReplyAction="http://tempuri.org/IService1/AddProprietaireResponse")]
        System.Threading.Tasks.Task<bool> AddProprietaireAsync(GestionLocation.MetierGestionLocation.Proprietaire proprietaire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProprietaire", ReplyAction="http://tempuri.org/IService1/UpdateProprietaireResponse")]
        bool UpdateProprietaire(GestionLocation.MetierGestionLocation.Proprietaire proprietaire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateProprietaire", ReplyAction="http://tempuri.org/IService1/UpdateProprietaireResponse")]
        System.Threading.Tasks.Task<bool> UpdateProprietaireAsync(GestionLocation.MetierGestionLocation.Proprietaire proprietaire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteProprietaire", ReplyAction="http://tempuri.org/IService1/DeleteProprietaireResponse")]
        bool DeleteProprietaire(GestionLocation.MetierGestionLocation.Proprietaire proprietaire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteProprietaire", ReplyAction="http://tempuri.org/IService1/DeleteProprietaireResponse")]
        System.Threading.Tasks.Task<bool> DeleteProprietaireAsync(GestionLocation.MetierGestionLocation.Proprietaire proprietaire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProprietaireById", ReplyAction="http://tempuri.org/IService1/GetProprietaireByIdResponse")]
        GestionLocation.MetierGestionLocation.Proprietaire GetProprietaireById(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProprietaireById", ReplyAction="http://tempuri.org/IService1/GetProprietaireByIdResponse")]
        System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.Proprietaire> GetProprietaireByIdAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListeProprietaires", ReplyAction="http://tempuri.org/IService1/GetListeProprietairesResponse")]
        GestionLocation.MetierGestionLocation.Proprietaire[] GetListeProprietaires();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListeProprietaires", ReplyAction="http://tempuri.org/IService1/GetListeProprietairesResponse")]
        System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.Proprietaire[]> GetListeProprietairesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddModePaiement", ReplyAction="http://tempuri.org/IService1/AddModePaiementResponse")]
        bool AddModePaiement(GestionLocation.MetierGestionLocation.ModePaiement mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddModePaiement", ReplyAction="http://tempuri.org/IService1/AddModePaiementResponse")]
        System.Threading.Tasks.Task<bool> AddModePaiementAsync(GestionLocation.MetierGestionLocation.ModePaiement mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetModePaiementById", ReplyAction="http://tempuri.org/IService1/GetModePaiementByIdResponse")]
        GestionLocation.MetierGestionLocation.ModePaiement GetModePaiementById(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetModePaiementById", ReplyAction="http://tempuri.org/IService1/GetModePaiementByIdResponse")]
        System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.ModePaiement> GetModePaiementByIdAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateModePaiement", ReplyAction="http://tempuri.org/IService1/UpdateModePaiementResponse")]
        bool UpdateModePaiement(GestionLocation.MetierGestionLocation.ModePaiement mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateModePaiement", ReplyAction="http://tempuri.org/IService1/UpdateModePaiementResponse")]
        System.Threading.Tasks.Task<bool> UpdateModePaiementAsync(GestionLocation.MetierGestionLocation.ModePaiement mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteModePaiement", ReplyAction="http://tempuri.org/IService1/DeleteModePaiementResponse")]
        bool DeleteModePaiement(GestionLocation.MetierGestionLocation.ModePaiement mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteModePaiement", ReplyAction="http://tempuri.org/IService1/DeleteModePaiementResponse")]
        System.Threading.Tasks.Task<bool> DeleteModePaiementAsync(GestionLocation.MetierGestionLocation.ModePaiement mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListeModePaiements", ReplyAction="http://tempuri.org/IService1/GetListeModePaiementsResponse")]
        GestionLocation.MetierGestionLocation.ModePaiement[] GetListeModePaiements();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListeModePaiements", ReplyAction="http://tempuri.org/IService1/GetListeModePaiementsResponse")]
        System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.ModePaiement[]> GetListeModePaiementsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddContratLocation", ReplyAction="http://tempuri.org/IService1/AddContratLocationResponse")]
        bool AddContratLocation(GestionLocation.MetierGestionLocation.ContratLocation contrat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddContratLocation", ReplyAction="http://tempuri.org/IService1/AddContratLocationResponse")]
        System.Threading.Tasks.Task<bool> AddContratLocationAsync(GestionLocation.MetierGestionLocation.ContratLocation contrat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateContratLocation", ReplyAction="http://tempuri.org/IService1/UpdateContratLocationResponse")]
        bool UpdateContratLocation(GestionLocation.MetierGestionLocation.ContratLocation contrat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateContratLocation", ReplyAction="http://tempuri.org/IService1/UpdateContratLocationResponse")]
        System.Threading.Tasks.Task<bool> UpdateContratLocationAsync(GestionLocation.MetierGestionLocation.ContratLocation contrat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteContratLocation", ReplyAction="http://tempuri.org/IService1/DeleteContratLocationResponse")]
        bool DeleteContratLocation(GestionLocation.MetierGestionLocation.ContratLocation contrat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteContratLocation", ReplyAction="http://tempuri.org/IService1/DeleteContratLocationResponse")]
        System.Threading.Tasks.Task<bool> DeleteContratLocationAsync(GestionLocation.MetierGestionLocation.ContratLocation contrat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetContratLocationById", ReplyAction="http://tempuri.org/IService1/GetContratLocationByIdResponse")]
        GestionLocation.MetierGestionLocation.ContratLocation GetContratLocationById(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetContratLocationById", ReplyAction="http://tempuri.org/IService1/GetContratLocationByIdResponse")]
        System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.ContratLocation> GetContratLocationByIdAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListeContratLocation", ReplyAction="http://tempuri.org/IService1/GetListeContratLocationResponse")]
        GestionLocation.MetierGestionLocation.ContratLocation[] GetListeContratLocation(string statut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListeContratLocation", ReplyAction="http://tempuri.org/IService1/GetListeContratLocationResponse")]
        System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.ContratLocation[]> GetListeContratLocationAsync(string statut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddPaiement", ReplyAction="http://tempuri.org/IService1/AddPaiementResponse")]
        bool AddPaiement(GestionLocation.MetierGestionLocation.Paiement paiement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddPaiement", ReplyAction="http://tempuri.org/IService1/AddPaiementResponse")]
        System.Threading.Tasks.Task<bool> AddPaiementAsync(GestionLocation.MetierGestionLocation.Paiement paiement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdatePaiement", ReplyAction="http://tempuri.org/IService1/UpdatePaiementResponse")]
        bool UpdatePaiement(GestionLocation.MetierGestionLocation.Paiement paiement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdatePaiement", ReplyAction="http://tempuri.org/IService1/UpdatePaiementResponse")]
        System.Threading.Tasks.Task<bool> UpdatePaiementAsync(GestionLocation.MetierGestionLocation.Paiement paiement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeletePaiement", ReplyAction="http://tempuri.org/IService1/DeletePaiementResponse")]
        bool DeletePaiement(GestionLocation.MetierGestionLocation.Paiement paiement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeletePaiement", ReplyAction="http://tempuri.org/IService1/DeletePaiementResponse")]
        System.Threading.Tasks.Task<bool> DeletePaiementAsync(GestionLocation.MetierGestionLocation.Paiement paiement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPaiementById", ReplyAction="http://tempuri.org/IService1/GetPaiementByIdResponse")]
        GestionLocation.MetierGestionLocation.Paiement GetPaiementById(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPaiementById", ReplyAction="http://tempuri.org/IService1/GetPaiementByIdResponse")]
        System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.Paiement> GetPaiementByIdAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListePaiements", ReplyAction="http://tempuri.org/IService1/GetListePaiementsResponse")]
        GestionLocation.MetierGestionLocation.Paiement[] GetListePaiements(System.Nullable<System.DateTime> dateDebut, System.Nullable<System.DateTime> dateFin, System.Nullable<int> idContrat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListePaiements", ReplyAction="http://tempuri.org/IService1/GetListePaiementsResponse")]
        System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.Paiement[]> GetListePaiementsAsync(System.Nullable<System.DateTime> dateDebut, System.Nullable<System.DateTime> dateFin, System.Nullable<int> idContrat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddUtilisateur", ReplyAction="http://tempuri.org/IService1/AddUtilisateurResponse")]
        bool AddUtilisateur(GestionLocation.MetierGestionLocation.Utilisateur utilisateur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddUtilisateur", ReplyAction="http://tempuri.org/IService1/AddUtilisateurResponse")]
        System.Threading.Tasks.Task<bool> AddUtilisateurAsync(GestionLocation.MetierGestionLocation.Utilisateur utilisateur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUtilisateur", ReplyAction="http://tempuri.org/IService1/UpdateUtilisateurResponse")]
        bool UpdateUtilisateur(GestionLocation.MetierGestionLocation.Utilisateur utilisateur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUtilisateur", ReplyAction="http://tempuri.org/IService1/UpdateUtilisateurResponse")]
        System.Threading.Tasks.Task<bool> UpdateUtilisateurAsync(GestionLocation.MetierGestionLocation.Utilisateur utilisateur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUtilisateur", ReplyAction="http://tempuri.org/IService1/DeleteUtilisateurResponse")]
        bool DeleteUtilisateur(GestionLocation.MetierGestionLocation.Utilisateur utilisateur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUtilisateur", ReplyAction="http://tempuri.org/IService1/DeleteUtilisateurResponse")]
        System.Threading.Tasks.Task<bool> DeleteUtilisateurAsync(GestionLocation.MetierGestionLocation.Utilisateur utilisateur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUtilisateurById", ReplyAction="http://tempuri.org/IService1/GetUtilisateurByIdResponse")]
        GestionLocation.MetierGestionLocation.Utilisateur GetUtilisateurById(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUtilisateurById", ReplyAction="http://tempuri.org/IService1/GetUtilisateurByIdResponse")]
        System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.Utilisateur> GetUtilisateurByIdAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AuthenticateUser", ReplyAction="http://tempuri.org/IService1/AuthenticateUserResponse")]
        GestionLocation.MetierGestionLocation.Utilisateur AuthenticateUser(string identifiant, string motDePasse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AuthenticateUser", ReplyAction="http://tempuri.org/IService1/AuthenticateUserResponse")]
        System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.Utilisateur> AuthenticateUserAsync(string identifiant, string motDePasse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListeUtilisateurs", ReplyAction="http://tempuri.org/IService1/GetListeUtilisateursResponse")]
        GestionLocation.MetierGestionLocation.Utilisateur[] GetListeUtilisateurs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetListeUtilisateurs", ReplyAction="http://tempuri.org/IService1/GetListeUtilisateursResponse")]
        System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.Utilisateur[]> GetListeUtilisateursAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : GestionLocation.MetierGestionLocation.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<GestionLocation.MetierGestionLocation.IService1>, GestionLocation.MetierGestionLocation.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public GestionLocation.MetierGestionLocation.CompositeType GetDataUsingDataContract(GestionLocation.MetierGestionLocation.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.CompositeType> GetDataUsingDataContractAsync(GestionLocation.MetierGestionLocation.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public bool AddAppartement(GestionLocation.MetierGestionLocation.Appartement appartement) {
            return base.Channel.AddAppartement(appartement);
        }
        
        public System.Threading.Tasks.Task<bool> AddAppartementAsync(GestionLocation.MetierGestionLocation.Appartement appartement) {
            return base.Channel.AddAppartementAsync(appartement);
        }
        
        public GestionLocation.MetierGestionLocation.Appartement[] GetListeAppartement(string adresse, System.Nullable<float> capacite, System.Nullable<bool> disponible) {
            return base.Channel.GetListeAppartement(adresse, capacite, disponible);
        }
        
        public System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.Appartement[]> GetListeAppartementAsync(string adresse, System.Nullable<float> capacite, System.Nullable<bool> disponible) {
            return base.Channel.GetListeAppartementAsync(adresse, capacite, disponible);
        }
        
        public GestionLocation.MetierGestionLocation.Appartement GetAppartementById(System.Nullable<int> id) {
            return base.Channel.GetAppartementById(id);
        }
        
        public System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.Appartement> GetAppartementByIdAsync(System.Nullable<int> id) {
            return base.Channel.GetAppartementByIdAsync(id);
        }
        
        public bool DeleteAppartement(GestionLocation.MetierGestionLocation.Appartement appartement) {
            return base.Channel.DeleteAppartement(appartement);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAppartementAsync(GestionLocation.MetierGestionLocation.Appartement appartement) {
            return base.Channel.DeleteAppartementAsync(appartement);
        }
        
        public bool UpdateAppartement(GestionLocation.MetierGestionLocation.Appartement appartement) {
            return base.Channel.UpdateAppartement(appartement);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAppartementAsync(GestionLocation.MetierGestionLocation.Appartement appartement) {
            return base.Channel.UpdateAppartementAsync(appartement);
        }
        
        public bool AddLocataire(GestionLocation.MetierGestionLocation.Locataire locataire) {
            return base.Channel.AddLocataire(locataire);
        }
        
        public System.Threading.Tasks.Task<bool> AddLocataireAsync(GestionLocation.MetierGestionLocation.Locataire locataire) {
            return base.Channel.AddLocataireAsync(locataire);
        }
        
        public bool UpdateLocataire(GestionLocation.MetierGestionLocation.Locataire locataire) {
            return base.Channel.UpdateLocataire(locataire);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateLocataireAsync(GestionLocation.MetierGestionLocation.Locataire locataire) {
            return base.Channel.UpdateLocataireAsync(locataire);
        }
        
        public bool DeleteLocataire(GestionLocation.MetierGestionLocation.Locataire locataire) {
            return base.Channel.DeleteLocataire(locataire);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteLocataireAsync(GestionLocation.MetierGestionLocation.Locataire locataire) {
            return base.Channel.DeleteLocataireAsync(locataire);
        }
        
        public GestionLocation.MetierGestionLocation.Locataire GetLocataireById(System.Nullable<int> id) {
            return base.Channel.GetLocataireById(id);
        }
        
        public System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.Locataire> GetLocataireByIdAsync(System.Nullable<int> id) {
            return base.Channel.GetLocataireByIdAsync(id);
        }
        
        public GestionLocation.MetierGestionLocation.Locataire[] GetListeLocataires() {
            return base.Channel.GetListeLocataires();
        }
        
        public System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.Locataire[]> GetListeLocatairesAsync() {
            return base.Channel.GetListeLocatairesAsync();
        }
        
        public bool AddProprietaire(GestionLocation.MetierGestionLocation.Proprietaire proprietaire) {
            return base.Channel.AddProprietaire(proprietaire);
        }
        
        public System.Threading.Tasks.Task<bool> AddProprietaireAsync(GestionLocation.MetierGestionLocation.Proprietaire proprietaire) {
            return base.Channel.AddProprietaireAsync(proprietaire);
        }
        
        public bool UpdateProprietaire(GestionLocation.MetierGestionLocation.Proprietaire proprietaire) {
            return base.Channel.UpdateProprietaire(proprietaire);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateProprietaireAsync(GestionLocation.MetierGestionLocation.Proprietaire proprietaire) {
            return base.Channel.UpdateProprietaireAsync(proprietaire);
        }
        
        public bool DeleteProprietaire(GestionLocation.MetierGestionLocation.Proprietaire proprietaire) {
            return base.Channel.DeleteProprietaire(proprietaire);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteProprietaireAsync(GestionLocation.MetierGestionLocation.Proprietaire proprietaire) {
            return base.Channel.DeleteProprietaireAsync(proprietaire);
        }
        
        public GestionLocation.MetierGestionLocation.Proprietaire GetProprietaireById(System.Nullable<int> id) {
            return base.Channel.GetProprietaireById(id);
        }
        
        public System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.Proprietaire> GetProprietaireByIdAsync(System.Nullable<int> id) {
            return base.Channel.GetProprietaireByIdAsync(id);
        }
        
        public GestionLocation.MetierGestionLocation.Proprietaire[] GetListeProprietaires() {
            return base.Channel.GetListeProprietaires();
        }
        
        public System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.Proprietaire[]> GetListeProprietairesAsync() {
            return base.Channel.GetListeProprietairesAsync();
        }
        
        public bool AddModePaiement(GestionLocation.MetierGestionLocation.ModePaiement mode) {
            return base.Channel.AddModePaiement(mode);
        }
        
        public System.Threading.Tasks.Task<bool> AddModePaiementAsync(GestionLocation.MetierGestionLocation.ModePaiement mode) {
            return base.Channel.AddModePaiementAsync(mode);
        }
        
        public GestionLocation.MetierGestionLocation.ModePaiement GetModePaiementById(System.Nullable<int> id) {
            return base.Channel.GetModePaiementById(id);
        }
        
        public System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.ModePaiement> GetModePaiementByIdAsync(System.Nullable<int> id) {
            return base.Channel.GetModePaiementByIdAsync(id);
        }
        
        public bool UpdateModePaiement(GestionLocation.MetierGestionLocation.ModePaiement mode) {
            return base.Channel.UpdateModePaiement(mode);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateModePaiementAsync(GestionLocation.MetierGestionLocation.ModePaiement mode) {
            return base.Channel.UpdateModePaiementAsync(mode);
        }
        
        public bool DeleteModePaiement(GestionLocation.MetierGestionLocation.ModePaiement mode) {
            return base.Channel.DeleteModePaiement(mode);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteModePaiementAsync(GestionLocation.MetierGestionLocation.ModePaiement mode) {
            return base.Channel.DeleteModePaiementAsync(mode);
        }
        
        public GestionLocation.MetierGestionLocation.ModePaiement[] GetListeModePaiements() {
            return base.Channel.GetListeModePaiements();
        }
        
        public System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.ModePaiement[]> GetListeModePaiementsAsync() {
            return base.Channel.GetListeModePaiementsAsync();
        }
        
        public bool AddContratLocation(GestionLocation.MetierGestionLocation.ContratLocation contrat) {
            return base.Channel.AddContratLocation(contrat);
        }
        
        public System.Threading.Tasks.Task<bool> AddContratLocationAsync(GestionLocation.MetierGestionLocation.ContratLocation contrat) {
            return base.Channel.AddContratLocationAsync(contrat);
        }
        
        public bool UpdateContratLocation(GestionLocation.MetierGestionLocation.ContratLocation contrat) {
            return base.Channel.UpdateContratLocation(contrat);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateContratLocationAsync(GestionLocation.MetierGestionLocation.ContratLocation contrat) {
            return base.Channel.UpdateContratLocationAsync(contrat);
        }
        
        public bool DeleteContratLocation(GestionLocation.MetierGestionLocation.ContratLocation contrat) {
            return base.Channel.DeleteContratLocation(contrat);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteContratLocationAsync(GestionLocation.MetierGestionLocation.ContratLocation contrat) {
            return base.Channel.DeleteContratLocationAsync(contrat);
        }
        
        public GestionLocation.MetierGestionLocation.ContratLocation GetContratLocationById(System.Nullable<int> id) {
            return base.Channel.GetContratLocationById(id);
        }
        
        public System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.ContratLocation> GetContratLocationByIdAsync(System.Nullable<int> id) {
            return base.Channel.GetContratLocationByIdAsync(id);
        }
        
        public GestionLocation.MetierGestionLocation.ContratLocation[] GetListeContratLocation(string statut) {
            return base.Channel.GetListeContratLocation(statut);
        }
        
        public System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.ContratLocation[]> GetListeContratLocationAsync(string statut) {
            return base.Channel.GetListeContratLocationAsync(statut);
        }
        
        public bool AddPaiement(GestionLocation.MetierGestionLocation.Paiement paiement) {
            return base.Channel.AddPaiement(paiement);
        }
        
        public System.Threading.Tasks.Task<bool> AddPaiementAsync(GestionLocation.MetierGestionLocation.Paiement paiement) {
            return base.Channel.AddPaiementAsync(paiement);
        }
        
        public bool UpdatePaiement(GestionLocation.MetierGestionLocation.Paiement paiement) {
            return base.Channel.UpdatePaiement(paiement);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePaiementAsync(GestionLocation.MetierGestionLocation.Paiement paiement) {
            return base.Channel.UpdatePaiementAsync(paiement);
        }
        
        public bool DeletePaiement(GestionLocation.MetierGestionLocation.Paiement paiement) {
            return base.Channel.DeletePaiement(paiement);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePaiementAsync(GestionLocation.MetierGestionLocation.Paiement paiement) {
            return base.Channel.DeletePaiementAsync(paiement);
        }
        
        public GestionLocation.MetierGestionLocation.Paiement GetPaiementById(System.Nullable<int> id) {
            return base.Channel.GetPaiementById(id);
        }
        
        public System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.Paiement> GetPaiementByIdAsync(System.Nullable<int> id) {
            return base.Channel.GetPaiementByIdAsync(id);
        }
        
        public GestionLocation.MetierGestionLocation.Paiement[] GetListePaiements(System.Nullable<System.DateTime> dateDebut, System.Nullable<System.DateTime> dateFin, System.Nullable<int> idContrat) {
            return base.Channel.GetListePaiements(dateDebut, dateFin, idContrat);
        }
        
        public System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.Paiement[]> GetListePaiementsAsync(System.Nullable<System.DateTime> dateDebut, System.Nullable<System.DateTime> dateFin, System.Nullable<int> idContrat) {
            return base.Channel.GetListePaiementsAsync(dateDebut, dateFin, idContrat);
        }
        
        public bool AddUtilisateur(GestionLocation.MetierGestionLocation.Utilisateur utilisateur) {
            return base.Channel.AddUtilisateur(utilisateur);
        }
        
        public System.Threading.Tasks.Task<bool> AddUtilisateurAsync(GestionLocation.MetierGestionLocation.Utilisateur utilisateur) {
            return base.Channel.AddUtilisateurAsync(utilisateur);
        }
        
        public bool UpdateUtilisateur(GestionLocation.MetierGestionLocation.Utilisateur utilisateur) {
            return base.Channel.UpdateUtilisateur(utilisateur);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUtilisateurAsync(GestionLocation.MetierGestionLocation.Utilisateur utilisateur) {
            return base.Channel.UpdateUtilisateurAsync(utilisateur);
        }
        
        public bool DeleteUtilisateur(GestionLocation.MetierGestionLocation.Utilisateur utilisateur) {
            return base.Channel.DeleteUtilisateur(utilisateur);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUtilisateurAsync(GestionLocation.MetierGestionLocation.Utilisateur utilisateur) {
            return base.Channel.DeleteUtilisateurAsync(utilisateur);
        }
        
        public GestionLocation.MetierGestionLocation.Utilisateur GetUtilisateurById(System.Nullable<int> id) {
            return base.Channel.GetUtilisateurById(id);
        }
        
        public System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.Utilisateur> GetUtilisateurByIdAsync(System.Nullable<int> id) {
            return base.Channel.GetUtilisateurByIdAsync(id);
        }
        
        public GestionLocation.MetierGestionLocation.Utilisateur AuthenticateUser(string identifiant, string motDePasse) {
            return base.Channel.AuthenticateUser(identifiant, motDePasse);
        }
        
        public System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.Utilisateur> AuthenticateUserAsync(string identifiant, string motDePasse) {
            return base.Channel.AuthenticateUserAsync(identifiant, motDePasse);
        }
        
        public GestionLocation.MetierGestionLocation.Utilisateur[] GetListeUtilisateurs() {
            return base.Channel.GetListeUtilisateurs();
        }
        
        public System.Threading.Tasks.Task<GestionLocation.MetierGestionLocation.Utilisateur[]> GetListeUtilisateursAsync() {
            return base.Channel.GetListeUtilisateursAsync();
        }
    }
}
